# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api import api_pb2 as api_dot_api__pb2
from core import Tron_pb2 as core_dot_Tron__pb2
from core.contract import account_contract_pb2 as core_dot_contract_dot_account__contract__pb2
from core.contract import asset_issue_contract_pb2 as core_dot_contract_dot_asset__issue__contract__pb2
from core.contract import balance_contract_pb2 as core_dot_contract_dot_balance__contract__pb2
from core.contract import exchange_contract_pb2 as core_dot_contract_dot_exchange__contract__pb2
from core.contract import market_contract_pb2 as core_dot_contract_dot_market__contract__pb2
from core.contract import proposal_contract_pb2 as core_dot_contract_dot_proposal__contract__pb2
from core.contract import shield_contract_pb2 as core_dot_contract_dot_shield__contract__pb2
from core.contract import smart_contract_pb2 as core_dot_contract_dot_smart__contract__pb2
from core.contract import storage_contract_pb2 as core_dot_contract_dot_storage__contract__pb2
from core.contract import witness_contract_pb2 as core_dot_contract_dot_witness__contract__pb2


class WalletStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAccount = channel.unary_unary(
                '/protocol.Wallet/GetAccount',
                request_serializer=core_dot_Tron__pb2.Account.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Account.FromString,
                )
        self.GetAccountById = channel.unary_unary(
                '/protocol.Wallet/GetAccountById',
                request_serializer=core_dot_Tron__pb2.Account.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Account.FromString,
                )
        self.GetAccountBalance = channel.unary_unary(
                '/protocol.Wallet/GetAccountBalance',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.AccountBalanceRequest.SerializeToString,
                response_deserializer=core_dot_contract_dot_balance__contract__pb2.AccountBalanceResponse.FromString,
                )
        self.GetBlockBalanceTrace = channel.unary_unary(
                '/protocol.Wallet/GetBlockBalanceTrace',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.BlockBalanceTrace.BlockIdentifier.SerializeToString,
                response_deserializer=core_dot_contract_dot_balance__contract__pb2.BlockBalanceTrace.FromString,
                )
        self.CreateTransaction = channel.unary_unary(
                '/protocol.Wallet/CreateTransaction',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.TransferContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.CreateTransaction2 = channel.unary_unary(
                '/protocol.Wallet/CreateTransaction2',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.TransferContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.BroadcastTransaction = channel.unary_unary(
                '/protocol.Wallet/BroadcastTransaction',
                request_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
                response_deserializer=api_dot_api__pb2.Return.FromString,
                )
        self.UpdateAccount = channel.unary_unary(
                '/protocol.Wallet/UpdateAccount',
                request_serializer=core_dot_contract_dot_account__contract__pb2.AccountUpdateContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.SetAccountId = channel.unary_unary(
                '/protocol.Wallet/SetAccountId',
                request_serializer=core_dot_contract_dot_account__contract__pb2.SetAccountIdContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.UpdateAccount2 = channel.unary_unary(
                '/protocol.Wallet/UpdateAccount2',
                request_serializer=core_dot_contract_dot_account__contract__pb2.AccountUpdateContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.VoteWitnessAccount = channel.unary_unary(
                '/protocol.Wallet/VoteWitnessAccount',
                request_serializer=core_dot_contract_dot_witness__contract__pb2.VoteWitnessContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.UpdateSetting = channel.unary_unary(
                '/protocol.Wallet/UpdateSetting',
                request_serializer=core_dot_contract_dot_smart__contract__pb2.UpdateSettingContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.UpdateEnergyLimit = channel.unary_unary(
                '/protocol.Wallet/UpdateEnergyLimit',
                request_serializer=core_dot_contract_dot_smart__contract__pb2.UpdateEnergyLimitContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.VoteWitnessAccount2 = channel.unary_unary(
                '/protocol.Wallet/VoteWitnessAccount2',
                request_serializer=core_dot_contract_dot_witness__contract__pb2.VoteWitnessContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.CreateAssetIssue = channel.unary_unary(
                '/protocol.Wallet/CreateAssetIssue',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.CreateAssetIssue2 = channel.unary_unary(
                '/protocol.Wallet/CreateAssetIssue2',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.UpdateWitness = channel.unary_unary(
                '/protocol.Wallet/UpdateWitness',
                request_serializer=core_dot_contract_dot_witness__contract__pb2.WitnessUpdateContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.UpdateWitness2 = channel.unary_unary(
                '/protocol.Wallet/UpdateWitness2',
                request_serializer=core_dot_contract_dot_witness__contract__pb2.WitnessUpdateContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.CreateAccount = channel.unary_unary(
                '/protocol.Wallet/CreateAccount',
                request_serializer=core_dot_contract_dot_account__contract__pb2.AccountCreateContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.CreateAccount2 = channel.unary_unary(
                '/protocol.Wallet/CreateAccount2',
                request_serializer=core_dot_contract_dot_account__contract__pb2.AccountCreateContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.CreateWitness = channel.unary_unary(
                '/protocol.Wallet/CreateWitness',
                request_serializer=core_dot_contract_dot_witness__contract__pb2.WitnessCreateContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.CreateWitness2 = channel.unary_unary(
                '/protocol.Wallet/CreateWitness2',
                request_serializer=core_dot_contract_dot_witness__contract__pb2.WitnessCreateContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.TransferAsset = channel.unary_unary(
                '/protocol.Wallet/TransferAsset',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.TransferAssetContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.TransferAsset2 = channel.unary_unary(
                '/protocol.Wallet/TransferAsset2',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.TransferAssetContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.ParticipateAssetIssue = channel.unary_unary(
                '/protocol.Wallet/ParticipateAssetIssue',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.ParticipateAssetIssueContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.ParticipateAssetIssue2 = channel.unary_unary(
                '/protocol.Wallet/ParticipateAssetIssue2',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.ParticipateAssetIssueContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.FreezeBalance = channel.unary_unary(
                '/protocol.Wallet/FreezeBalance',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.FreezeBalanceContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.FreezeBalance2 = channel.unary_unary(
                '/protocol.Wallet/FreezeBalance2',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.FreezeBalanceContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.FreezeBalanceV2 = channel.unary_unary(
                '/protocol.Wallet/FreezeBalanceV2',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.FreezeBalanceV2Contract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.UnfreezeBalance = channel.unary_unary(
                '/protocol.Wallet/UnfreezeBalance',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.UnfreezeBalanceContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.UnfreezeBalance2 = channel.unary_unary(
                '/protocol.Wallet/UnfreezeBalance2',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.UnfreezeBalanceContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.UnfreezeBalanceV2 = channel.unary_unary(
                '/protocol.Wallet/UnfreezeBalanceV2',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.UnfreezeBalanceV2Contract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.UnfreezeAsset = channel.unary_unary(
                '/protocol.Wallet/UnfreezeAsset',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.UnfreezeAssetContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.UnfreezeAsset2 = channel.unary_unary(
                '/protocol.Wallet/UnfreezeAsset2',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.UnfreezeAssetContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.WithdrawBalance = channel.unary_unary(
                '/protocol.Wallet/WithdrawBalance',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.WithdrawBalanceContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.WithdrawBalance2 = channel.unary_unary(
                '/protocol.Wallet/WithdrawBalance2',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.WithdrawBalanceContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.WithdrawExpireUnfreeze = channel.unary_unary(
                '/protocol.Wallet/WithdrawExpireUnfreeze',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.WithdrawExpireUnfreezeContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.DelegateResource = channel.unary_unary(
                '/protocol.Wallet/DelegateResource',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.DelegateResourceContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.UnDelegateResource = channel.unary_unary(
                '/protocol.Wallet/UnDelegateResource',
                request_serializer=core_dot_contract_dot_balance__contract__pb2.UnDelegateResourceContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.UpdateAsset = channel.unary_unary(
                '/protocol.Wallet/UpdateAsset',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.UpdateAssetContract.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.UpdateAsset2 = channel.unary_unary(
                '/protocol.Wallet/UpdateAsset2',
                request_serializer=core_dot_contract_dot_asset__issue__contract__pb2.UpdateAssetContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.ProposalCreate = channel.unary_unary(
                '/protocol.Wallet/ProposalCreate',
                request_serializer=core_dot_contract_dot_proposal__contract__pb2.ProposalCreateContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.ProposalApprove = channel.unary_unary(
                '/protocol.Wallet/ProposalApprove',
                request_serializer=core_dot_contract_dot_proposal__contract__pb2.ProposalApproveContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.ProposalDelete = channel.unary_unary(
                '/protocol.Wallet/ProposalDelete',
                request_serializer=core_dot_contract_dot_proposal__contract__pb2.ProposalDeleteContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.BuyStorage = channel.unary_unary(
                '/protocol.Wallet/BuyStorage',
                request_serializer=core_dot_contract_dot_storage__contract__pb2.BuyStorageContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.BuyStorageBytes = channel.unary_unary(
                '/protocol.Wallet/BuyStorageBytes',
                request_serializer=core_dot_contract_dot_storage__contract__pb2.BuyStorageBytesContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.SellStorage = channel.unary_unary(
                '/protocol.Wallet/SellStorage',
                request_serializer=core_dot_contract_dot_storage__contract__pb2.SellStorageContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.ExchangeCreate = channel.unary_unary(
                '/protocol.Wallet/ExchangeCreate',
                request_serializer=core_dot_contract_dot_exchange__contract__pb2.ExchangeCreateContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.ExchangeInject = channel.unary_unary(
                '/protocol.Wallet/ExchangeInject',
                request_serializer=core_dot_contract_dot_exchange__contract__pb2.ExchangeInjectContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.ExchangeWithdraw = channel.unary_unary(
                '/protocol.Wallet/ExchangeWithdraw',
                request_serializer=core_dot_contract_dot_exchange__contract__pb2.ExchangeWithdrawContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.ExchangeTransaction = channel.unary_unary(
                '/protocol.Wallet/ExchangeTransaction',
                request_serializer=core_dot_contract_dot_exchange__contract__pb2.ExchangeTransactionContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.MarketSellAsset = channel.unary_unary(
                '/protocol.Wallet/MarketSellAsset',
                request_serializer=core_dot_contract_dot_market__contract__pb2.MarketSellAssetContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.MarketCancelOrder = channel.unary_unary(
                '/protocol.Wallet/MarketCancelOrder',
                request_serializer=core_dot_contract_dot_market__contract__pb2.MarketCancelOrderContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.GetMarketOrderById = channel.unary_unary(
                '/protocol.Wallet/GetMarketOrderById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketOrder.FromString,
                )
        self.GetMarketOrderByAccount = channel.unary_unary(
                '/protocol.Wallet/GetMarketOrderByAccount',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketOrderList.FromString,
                )
        self.GetMarketPriceByPair = channel.unary_unary(
                '/protocol.Wallet/GetMarketPriceByPair',
                request_serializer=core_dot_Tron__pb2.MarketOrderPair.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketPriceList.FromString,
                )
        self.GetMarketOrderListByPair = channel.unary_unary(
                '/protocol.Wallet/GetMarketOrderListByPair',
                request_serializer=core_dot_Tron__pb2.MarketOrderPair.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketOrderList.FromString,
                )
        self.GetMarketPairList = channel.unary_unary(
                '/protocol.Wallet/GetMarketPairList',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketOrderPairList.FromString,
                )
        self.ListNodes = channel.unary_unary(
                '/protocol.Wallet/ListNodes',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NodeList.FromString,
                )
        self.GetAssetIssueByAccount = channel.unary_unary(
                '/protocol.Wallet/GetAssetIssueByAccount',
                request_serializer=core_dot_Tron__pb2.Account.SerializeToString,
                response_deserializer=api_dot_api__pb2.AssetIssueList.FromString,
                )
        self.GetAccountNet = channel.unary_unary(
                '/protocol.Wallet/GetAccountNet',
                request_serializer=core_dot_Tron__pb2.Account.SerializeToString,
                response_deserializer=api_dot_api__pb2.AccountNetMessage.FromString,
                )
        self.GetAccountResource = channel.unary_unary(
                '/protocol.Wallet/GetAccountResource',
                request_serializer=core_dot_Tron__pb2.Account.SerializeToString,
                response_deserializer=api_dot_api__pb2.AccountResourceMessage.FromString,
                )
        self.GetAssetIssueByName = channel.unary_unary(
                '/protocol.Wallet/GetAssetIssueByName',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
                )
        self.GetAssetIssueListByName = channel.unary_unary(
                '/protocol.Wallet/GetAssetIssueListByName',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.AssetIssueList.FromString,
                )
        self.GetAssetIssueById = channel.unary_unary(
                '/protocol.Wallet/GetAssetIssueById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
                )
        self.GetNowBlock = channel.unary_unary(
                '/protocol.Wallet/GetNowBlock',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Block.FromString,
                )
        self.GetNowBlock2 = channel.unary_unary(
                '/protocol.Wallet/GetNowBlock2',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockExtention.FromString,
                )
        self.GetBlockByNum = channel.unary_unary(
                '/protocol.Wallet/GetBlockByNum',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Block.FromString,
                )
        self.GetBlockByNum2 = channel.unary_unary(
                '/protocol.Wallet/GetBlockByNum2',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockExtention.FromString,
                )
        self.GetTransactionCountByBlockNum = channel.unary_unary(
                '/protocol.Wallet/GetTransactionCountByBlockNum',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.GetBlockById = channel.unary_unary(
                '/protocol.Wallet/GetBlockById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Block.FromString,
                )
        self.GetBlockByLimitNext = channel.unary_unary(
                '/protocol.Wallet/GetBlockByLimitNext',
                request_serializer=api_dot_api__pb2.BlockLimit.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockList.FromString,
                )
        self.GetBlockByLimitNext2 = channel.unary_unary(
                '/protocol.Wallet/GetBlockByLimitNext2',
                request_serializer=api_dot_api__pb2.BlockLimit.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockListExtention.FromString,
                )
        self.GetBlockByLatestNum = channel.unary_unary(
                '/protocol.Wallet/GetBlockByLatestNum',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockList.FromString,
                )
        self.GetBlockByLatestNum2 = channel.unary_unary(
                '/protocol.Wallet/GetBlockByLatestNum2',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockListExtention.FromString,
                )
        self.GetTransactionById = channel.unary_unary(
                '/protocol.Wallet/GetTransactionById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.DeployContract = channel.unary_unary(
                '/protocol.Wallet/DeployContract',
                request_serializer=core_dot_contract_dot_smart__contract__pb2.CreateSmartContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.GetContract = channel.unary_unary(
                '/protocol.Wallet/GetContract',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_contract_dot_smart__contract__pb2.SmartContract.FromString,
                )
        self.GetContractInfo = channel.unary_unary(
                '/protocol.Wallet/GetContractInfo',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_contract_dot_smart__contract__pb2.SmartContractDataWrapper.FromString,
                )
        self.TriggerContract = channel.unary_unary(
                '/protocol.Wallet/TriggerContract',
                request_serializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.TriggerConstantContract = channel.unary_unary(
                '/protocol.Wallet/TriggerConstantContract',
                request_serializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.EstimateEnergy = channel.unary_unary(
                '/protocol.Wallet/EstimateEnergy',
                request_serializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.EstimateEnergyMessage.FromString,
                )
        self.ClearContractABI = channel.unary_unary(
                '/protocol.Wallet/ClearContractABI',
                request_serializer=core_dot_contract_dot_smart__contract__pb2.ClearABIContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.ListWitnesses = channel.unary_unary(
                '/protocol.Wallet/ListWitnesses',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.WitnessList.FromString,
                )
        self.GetDelegatedResource = channel.unary_unary(
                '/protocol.Wallet/GetDelegatedResource',
                request_serializer=api_dot_api__pb2.DelegatedResourceMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.DelegatedResourceList.FromString,
                )
        self.GetDelegatedResourceV2 = channel.unary_unary(
                '/protocol.Wallet/GetDelegatedResourceV2',
                request_serializer=api_dot_api__pb2.DelegatedResourceMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.DelegatedResourceList.FromString,
                )
        self.GetDelegatedResourceAccountIndex = channel.unary_unary(
                '/protocol.Wallet/GetDelegatedResourceAccountIndex',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.DelegatedResourceAccountIndex.FromString,
                )
        self.GetDelegatedResourceAccountIndexV2 = channel.unary_unary(
                '/protocol.Wallet/GetDelegatedResourceAccountIndexV2',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.DelegatedResourceAccountIndex.FromString,
                )
        self.GetCanDelegatedMaxSize = channel.unary_unary(
                '/protocol.Wallet/GetCanDelegatedMaxSize',
                request_serializer=api_dot_api__pb2.CanDelegatedMaxSizeRequestMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.CanDelegatedMaxSizeResponseMessage.FromString,
                )
        self.GetAvailableUnfreezeCount = channel.unary_unary(
                '/protocol.Wallet/GetAvailableUnfreezeCount',
                request_serializer=api_dot_api__pb2.GetAvailableUnfreezeCountRequestMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.GetAvailableUnfreezeCountResponseMessage.FromString,
                )
        self.GetCanWithdrawUnfreezeAmount = channel.unary_unary(
                '/protocol.Wallet/GetCanWithdrawUnfreezeAmount',
                request_serializer=api_dot_api__pb2.CanWithdrawUnfreezeAmountRequestMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.CanWithdrawUnfreezeAmountResponseMessage.FromString,
                )
        self.ListProposals = channel.unary_unary(
                '/protocol.Wallet/ListProposals',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.ProposalList.FromString,
                )
        self.GetPaginatedProposalList = channel.unary_unary(
                '/protocol.Wallet/GetPaginatedProposalList',
                request_serializer=api_dot_api__pb2.PaginatedMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.ProposalList.FromString,
                )
        self.GetProposalById = channel.unary_unary(
                '/protocol.Wallet/GetProposalById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Proposal.FromString,
                )
        self.ListExchanges = channel.unary_unary(
                '/protocol.Wallet/ListExchanges',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.ExchangeList.FromString,
                )
        self.GetPaginatedExchangeList = channel.unary_unary(
                '/protocol.Wallet/GetPaginatedExchangeList',
                request_serializer=api_dot_api__pb2.PaginatedMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.ExchangeList.FromString,
                )
        self.GetExchangeById = channel.unary_unary(
                '/protocol.Wallet/GetExchangeById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Exchange.FromString,
                )
        self.GetChainParameters = channel.unary_unary(
                '/protocol.Wallet/GetChainParameters',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.ChainParameters.FromString,
                )
        self.GetAssetIssueList = channel.unary_unary(
                '/protocol.Wallet/GetAssetIssueList',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.AssetIssueList.FromString,
                )
        self.GetPaginatedAssetIssueList = channel.unary_unary(
                '/protocol.Wallet/GetPaginatedAssetIssueList',
                request_serializer=api_dot_api__pb2.PaginatedMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.AssetIssueList.FromString,
                )
        self.TotalTransaction = channel.unary_unary(
                '/protocol.Wallet/TotalTransaction',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.GetNextMaintenanceTime = channel.unary_unary(
                '/protocol.Wallet/GetNextMaintenanceTime',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.GetTransactionSign = channel.unary_unary(
                '/protocol.Wallet/GetTransactionSign',
                request_serializer=core_dot_Tron__pb2.TransactionSign.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.GetTransactionSign2 = channel.unary_unary(
                '/protocol.Wallet/GetTransactionSign2',
                request_serializer=core_dot_Tron__pb2.TransactionSign.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.CreateAddress = channel.unary_unary(
                '/protocol.Wallet/CreateAddress',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                )
        self.EasyTransferAsset = channel.unary_unary(
                '/protocol.Wallet/EasyTransferAsset',
                request_serializer=api_dot_api__pb2.EasyTransferAssetMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.EasyTransferResponse.FromString,
                )
        self.EasyTransferAssetByPrivate = channel.unary_unary(
                '/protocol.Wallet/EasyTransferAssetByPrivate',
                request_serializer=api_dot_api__pb2.EasyTransferAssetByPrivateMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.EasyTransferResponse.FromString,
                )
        self.EasyTransfer = channel.unary_unary(
                '/protocol.Wallet/EasyTransfer',
                request_serializer=api_dot_api__pb2.EasyTransferMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.EasyTransferResponse.FromString,
                )
        self.EasyTransferByPrivate = channel.unary_unary(
                '/protocol.Wallet/EasyTransferByPrivate',
                request_serializer=api_dot_api__pb2.EasyTransferByPrivateMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.EasyTransferResponse.FromString,
                )
        self.GenerateAddress = channel.unary_unary(
                '/protocol.Wallet/GenerateAddress',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.AddressPrKeyPairMessage.FromString,
                )
        self.GetTransactionInfoById = channel.unary_unary(
                '/protocol.Wallet/GetTransactionInfoById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.TransactionInfo.FromString,
                )
        self.AccountPermissionUpdate = channel.unary_unary(
                '/protocol.Wallet/AccountPermissionUpdate',
                request_serializer=core_dot_contract_dot_account__contract__pb2.AccountPermissionUpdateContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.AddSign = channel.unary_unary(
                '/protocol.Wallet/AddSign',
                request_serializer=core_dot_Tron__pb2.TransactionSign.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.GetTransactionSignWeight = channel.unary_unary(
                '/protocol.Wallet/GetTransactionSignWeight',
                request_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionSignWeight.FromString,
                )
        self.GetTransactionApprovedList = channel.unary_unary(
                '/protocol.Wallet/GetTransactionApprovedList',
                request_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionApprovedList.FromString,
                )
        self.GetNodeInfo = channel.unary_unary(
                '/protocol.Wallet/GetNodeInfo',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.NodeInfo.FromString,
                )
        self.GetRewardInfo = channel.unary_unary(
                '/protocol.Wallet/GetRewardInfo',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.GetBrokerageInfo = channel.unary_unary(
                '/protocol.Wallet/GetBrokerageInfo',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.UpdateBrokerage = channel.unary_unary(
                '/protocol.Wallet/UpdateBrokerage',
                request_serializer=core_dot_contract_dot_storage__contract__pb2.UpdateBrokerageContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.CreateShieldedTransaction = channel.unary_unary(
                '/protocol.Wallet/CreateShieldedTransaction',
                request_serializer=api_dot_api__pb2.PrivateParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.GetMerkleTreeVoucherInfo = channel.unary_unary(
                '/protocol.Wallet/GetMerkleTreeVoucherInfo',
                request_serializer=core_dot_contract_dot_shield__contract__pb2.OutputPointInfo.SerializeToString,
                response_deserializer=core_dot_contract_dot_shield__contract__pb2.IncrementalMerkleVoucherInfo.FromString,
                )
        self.ScanNoteByIvk = channel.unary_unary(
                '/protocol.Wallet/ScanNoteByIvk',
                request_serializer=api_dot_api__pb2.IvkDecryptParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotes.FromString,
                )
        self.ScanAndMarkNoteByIvk = channel.unary_unary(
                '/protocol.Wallet/ScanAndMarkNoteByIvk',
                request_serializer=api_dot_api__pb2.IvkDecryptAndMarkParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotesMarked.FromString,
                )
        self.ScanNoteByOvk = channel.unary_unary(
                '/protocol.Wallet/ScanNoteByOvk',
                request_serializer=api_dot_api__pb2.OvkDecryptParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotes.FromString,
                )
        self.GetSpendingKey = channel.unary_unary(
                '/protocol.Wallet/GetSpendingKey',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                )
        self.GetExpandedSpendingKey = channel.unary_unary(
                '/protocol.Wallet/GetExpandedSpendingKey',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.ExpandedSpendingKeyMessage.FromString,
                )
        self.GetAkFromAsk = channel.unary_unary(
                '/protocol.Wallet/GetAkFromAsk',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                )
        self.GetNkFromNsk = channel.unary_unary(
                '/protocol.Wallet/GetNkFromNsk',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                )
        self.GetIncomingViewingKey = channel.unary_unary(
                '/protocol.Wallet/GetIncomingViewingKey',
                request_serializer=api_dot_api__pb2.ViewingKeyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.IncomingViewingKeyMessage.FromString,
                )
        self.GetDiversifier = channel.unary_unary(
                '/protocol.Wallet/GetDiversifier',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.DiversifierMessage.FromString,
                )
        self.GetNewShieldedAddress = channel.unary_unary(
                '/protocol.Wallet/GetNewShieldedAddress',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.ShieldedAddressInfo.FromString,
                )
        self.GetZenPaymentAddress = channel.unary_unary(
                '/protocol.Wallet/GetZenPaymentAddress',
                request_serializer=api_dot_api__pb2.IncomingViewingKeyDiversifierMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.PaymentAddressMessage.FromString,
                )
        self.GetRcm = channel.unary_unary(
                '/protocol.Wallet/GetRcm',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                )
        self.IsSpend = channel.unary_unary(
                '/protocol.Wallet/IsSpend',
                request_serializer=api_dot_api__pb2.NoteParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.SpendResult.FromString,
                )
        self.CreateShieldedTransactionWithoutSpendAuthSig = channel.unary_unary(
                '/protocol.Wallet/CreateShieldedTransactionWithoutSpendAuthSig',
                request_serializer=api_dot_api__pb2.PrivateParametersWithoutAsk.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.GetShieldTransactionHash = channel.unary_unary(
                '/protocol.Wallet/GetShieldTransactionHash',
                request_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
                response_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                )
        self.CreateSpendAuthSig = channel.unary_unary(
                '/protocol.Wallet/CreateSpendAuthSig',
                request_serializer=api_dot_api__pb2.SpendAuthSigParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                )
        self.CreateShieldNullifier = channel.unary_unary(
                '/protocol.Wallet/CreateShieldNullifier',
                request_serializer=api_dot_api__pb2.NfParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                )
        self.CreateShieldedContractParameters = channel.unary_unary(
                '/protocol.Wallet/CreateShieldedContractParameters',
                request_serializer=api_dot_api__pb2.PrivateShieldedTRC20Parameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.ShieldedTRC20Parameters.FromString,
                )
        self.CreateShieldedContractParametersWithoutAsk = channel.unary_unary(
                '/protocol.Wallet/CreateShieldedContractParametersWithoutAsk',
                request_serializer=api_dot_api__pb2.PrivateShieldedTRC20ParametersWithoutAsk.SerializeToString,
                response_deserializer=api_dot_api__pb2.ShieldedTRC20Parameters.FromString,
                )
        self.ScanShieldedTRC20NotesByIvk = channel.unary_unary(
                '/protocol.Wallet/ScanShieldedTRC20NotesByIvk',
                request_serializer=api_dot_api__pb2.IvkDecryptTRC20Parameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotesTRC20.FromString,
                )
        self.ScanShieldedTRC20NotesByOvk = channel.unary_unary(
                '/protocol.Wallet/ScanShieldedTRC20NotesByOvk',
                request_serializer=api_dot_api__pb2.OvkDecryptTRC20Parameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotesTRC20.FromString,
                )
        self.IsShieldedTRC20ContractNoteSpent = channel.unary_unary(
                '/protocol.Wallet/IsShieldedTRC20ContractNoteSpent',
                request_serializer=api_dot_api__pb2.NfTRC20Parameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.NullifierResult.FromString,
                )
        self.GetTriggerInputForShieldedTRC20Contract = channel.unary_unary(
                '/protocol.Wallet/GetTriggerInputForShieldedTRC20Contract',
                request_serializer=api_dot_api__pb2.ShieldedTRC20TriggerContractParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                )
        self.CreateCommonTransaction = channel.unary_unary(
                '/protocol.Wallet/CreateCommonTransaction',
                request_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.GetTransactionInfoByBlockNum = channel.unary_unary(
                '/protocol.Wallet/GetTransactionInfoByBlockNum',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionInfoList.FromString,
                )
        self.GetBurnTrx = channel.unary_unary(
                '/protocol.Wallet/GetBurnTrx',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.GetTransactionFromPending = channel.unary_unary(
                '/protocol.Wallet/GetTransactionFromPending',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.GetTransactionListFromPending = channel.unary_unary(
                '/protocol.Wallet/GetTransactionListFromPending',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionIdList.FromString,
                )
        self.GetPendingSize = channel.unary_unary(
                '/protocol.Wallet/GetPendingSize',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.GetBlock = channel.unary_unary(
                '/protocol.Wallet/GetBlock',
                request_serializer=api_dot_api__pb2.BlockReq.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockExtention.FromString,
                )


class WalletServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockBalanceTrace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTransaction(self, request, context):
        """Please use CreateTransaction2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTransaction2(self, request, context):
        """Use this function instead of CreateTransaction.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BroadcastTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAccount(self, request, context):
        """Please use UpdateAccount2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAccountId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAccount2(self, request, context):
        """Use this function instead of UpdateAccount.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoteWitnessAccount(self, request, context):
        """Please use VoteWitnessAccount2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSetting(self, request, context):
        """modify the consume_user_resource_percent
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEnergyLimit(self, request, context):
        """modify the energy_limit
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoteWitnessAccount2(self, request, context):
        """Use this function instead of VoteWitnessAccount.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAssetIssue(self, request, context):
        """Please use CreateAssetIssue2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAssetIssue2(self, request, context):
        """Use this function instead of CreateAssetIssue.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWitness(self, request, context):
        """Please use UpdateWitness2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWitness2(self, request, context):
        """Use this function instead of UpdateWitness.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccount(self, request, context):
        """Please use CreateAccount2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccount2(self, request, context):
        """Use this function instead of CreateAccount.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWitness(self, request, context):
        """Please use CreateWitness2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWitness2(self, request, context):
        """Use this function instead of CreateWitness.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferAsset(self, request, context):
        """Please use TransferAsset2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferAsset2(self, request, context):
        """Use this function instead of TransferAsset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ParticipateAssetIssue(self, request, context):
        """Please use ParticipateAssetIssue2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ParticipateAssetIssue2(self, request, context):
        """Use this function instead of ParticipateAssetIssue.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FreezeBalance(self, request, context):
        """Please use FreezeBalance2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FreezeBalance2(self, request, context):
        """Use this function instead of FreezeBalance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FreezeBalanceV2(self, request, context):
        """Use this function when FreezeBalanceV2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnfreezeBalance(self, request, context):
        """Please use UnfreezeBalance2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnfreezeBalance2(self, request, context):
        """Use this function instead of UnfreezeBalance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnfreezeBalanceV2(self, request, context):
        """Use this function when UnfreezeBalanceV2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnfreezeAsset(self, request, context):
        """Please use UnfreezeAsset2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnfreezeAsset2(self, request, context):
        """Use this function instead of UnfreezeAsset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WithdrawBalance(self, request, context):
        """Please use WithdrawBalance2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WithdrawBalance2(self, request, context):
        """Use this function instead of WithdrawBalance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WithdrawExpireUnfreeze(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DelegateResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnDelegateResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAsset(self, request, context):
        """Please use UpdateAsset2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAsset2(self, request, context):
        """Use this function instead of UpdateAsset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProposalCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProposalApprove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProposalDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyStorage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyStorageBytes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellStorage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExchangeCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExchangeInject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExchangeWithdraw(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExchangeTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarketSellAsset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarketCancelOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketOrderById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketOrderByAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketPriceByPair(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketOrderListByPair(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketPairList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetIssueByAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountNet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetIssueByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetIssueListByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetIssueById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNowBlock(self, request, context):
        """Please use GetNowBlock2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNowBlock2(self, request, context):
        """Use this function instead of GetNowBlock.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByNum(self, request, context):
        """Please use GetBlockByNum2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByNum2(self, request, context):
        """Use this function instead of GetBlockByNum.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionCountByBlockNum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByLimitNext(self, request, context):
        """Please use GetBlockByLimitNext2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByLimitNext2(self, request, context):
        """Use this function instead of GetBlockByLimitNext.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByLatestNum(self, request, context):
        """Please use GetBlockByLatestNum2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByLatestNum2(self, request, context):
        """Use this function instead of GetBlockByLatestNum.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeployContract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContractInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerContract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerConstantContract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EstimateEnergy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearContractABI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWitnesses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDelegatedResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDelegatedResourceV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDelegatedResourceAccountIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDelegatedResourceAccountIndexV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCanDelegatedMaxSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAvailableUnfreezeCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCanWithdrawUnfreezeAmount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProposals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaginatedProposalList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProposalById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExchanges(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaginatedExchangeList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExchangeById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChainParameters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetIssueList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaginatedAssetIssueList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TotalTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNextMaintenanceTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionSign(self, request, context):
        """Warning: do not invoke this interface provided by others.
        Please use GetTransactionSign2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionSign2(self, request, context):
        """Warning: do not invoke this interface provided by others.
        Use this function instead of GetTransactionSign.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAddress(self, request, context):
        """Warning: do not invoke this interface provided by others.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EasyTransferAsset(self, request, context):
        """Warning: do not invoke this interface provided by others.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EasyTransferAssetByPrivate(self, request, context):
        """Warning: do not invoke this interface provided by others.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EasyTransfer(self, request, context):
        """Warning: do not invoke this interface provided by others.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EasyTransferByPrivate(self, request, context):
        """Warning: do not invoke this interface provided by others.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateAddress(self, request, context):
        """Warning: do not invoke this interface provided by others.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionInfoById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountPermissionUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSign(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionSignWeight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionApprovedList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRewardInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBrokerageInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBrokerage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateShieldedTransaction(self, request, context):
        """for shiededTransaction
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMerkleTreeVoucherInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanNoteByIvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanAndMarkNoteByIvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanNoteByOvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpendingKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExpandedSpendingKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAkFromAsk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNkFromNsk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIncomingViewingKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDiversifier(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewShieldedAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetZenPaymentAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRcm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsSpend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateShieldedTransactionWithoutSpendAuthSig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShieldTransactionHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSpendAuthSig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateShieldNullifier(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateShieldedContractParameters(self, request, context):
        """for shielded contract
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateShieldedContractParametersWithoutAsk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanShieldedTRC20NotesByIvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanShieldedTRC20NotesByOvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsShieldedTRC20ContractNoteSpent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTriggerInputForShieldedTRC20Contract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCommonTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionInfoByBlockNum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBurnTrx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionFromPending(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionListFromPending(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPendingSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WalletServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccount,
                    request_deserializer=core_dot_Tron__pb2.Account.FromString,
                    response_serializer=core_dot_Tron__pb2.Account.SerializeToString,
            ),
            'GetAccountById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountById,
                    request_deserializer=core_dot_Tron__pb2.Account.FromString,
                    response_serializer=core_dot_Tron__pb2.Account.SerializeToString,
            ),
            'GetAccountBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountBalance,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.AccountBalanceRequest.FromString,
                    response_serializer=core_dot_contract_dot_balance__contract__pb2.AccountBalanceResponse.SerializeToString,
            ),
            'GetBlockBalanceTrace': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockBalanceTrace,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.BlockBalanceTrace.BlockIdentifier.FromString,
                    response_serializer=core_dot_contract_dot_balance__contract__pb2.BlockBalanceTrace.SerializeToString,
            ),
            'CreateTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTransaction,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.TransferContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'CreateTransaction2': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTransaction2,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.TransferContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'BroadcastTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.BroadcastTransaction,
                    request_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                    response_serializer=api_dot_api__pb2.Return.SerializeToString,
            ),
            'UpdateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAccount,
                    request_deserializer=core_dot_contract_dot_account__contract__pb2.AccountUpdateContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'SetAccountId': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAccountId,
                    request_deserializer=core_dot_contract_dot_account__contract__pb2.SetAccountIdContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'UpdateAccount2': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAccount2,
                    request_deserializer=core_dot_contract_dot_account__contract__pb2.AccountUpdateContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'VoteWitnessAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.VoteWitnessAccount,
                    request_deserializer=core_dot_contract_dot_witness__contract__pb2.VoteWitnessContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'UpdateSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSetting,
                    request_deserializer=core_dot_contract_dot_smart__contract__pb2.UpdateSettingContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'UpdateEnergyLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEnergyLimit,
                    request_deserializer=core_dot_contract_dot_smart__contract__pb2.UpdateEnergyLimitContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'VoteWitnessAccount2': grpc.unary_unary_rpc_method_handler(
                    servicer.VoteWitnessAccount2,
                    request_deserializer=core_dot_contract_dot_witness__contract__pb2.VoteWitnessContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'CreateAssetIssue': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAssetIssue,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'CreateAssetIssue2': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAssetIssue2,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'UpdateWitness': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWitness,
                    request_deserializer=core_dot_contract_dot_witness__contract__pb2.WitnessUpdateContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'UpdateWitness2': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWitness2,
                    request_deserializer=core_dot_contract_dot_witness__contract__pb2.WitnessUpdateContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=core_dot_contract_dot_account__contract__pb2.AccountCreateContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'CreateAccount2': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount2,
                    request_deserializer=core_dot_contract_dot_account__contract__pb2.AccountCreateContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'CreateWitness': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWitness,
                    request_deserializer=core_dot_contract_dot_witness__contract__pb2.WitnessCreateContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'CreateWitness2': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWitness2,
                    request_deserializer=core_dot_contract_dot_witness__contract__pb2.WitnessCreateContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'TransferAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferAsset,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.TransferAssetContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'TransferAsset2': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferAsset2,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.TransferAssetContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'ParticipateAssetIssue': grpc.unary_unary_rpc_method_handler(
                    servicer.ParticipateAssetIssue,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.ParticipateAssetIssueContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'ParticipateAssetIssue2': grpc.unary_unary_rpc_method_handler(
                    servicer.ParticipateAssetIssue2,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.ParticipateAssetIssueContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'FreezeBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.FreezeBalance,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.FreezeBalanceContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'FreezeBalance2': grpc.unary_unary_rpc_method_handler(
                    servicer.FreezeBalance2,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.FreezeBalanceContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'FreezeBalanceV2': grpc.unary_unary_rpc_method_handler(
                    servicer.FreezeBalanceV2,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.FreezeBalanceV2Contract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'UnfreezeBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.UnfreezeBalance,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.UnfreezeBalanceContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'UnfreezeBalance2': grpc.unary_unary_rpc_method_handler(
                    servicer.UnfreezeBalance2,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.UnfreezeBalanceContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'UnfreezeBalanceV2': grpc.unary_unary_rpc_method_handler(
                    servicer.UnfreezeBalanceV2,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.UnfreezeBalanceV2Contract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'UnfreezeAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.UnfreezeAsset,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.UnfreezeAssetContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'UnfreezeAsset2': grpc.unary_unary_rpc_method_handler(
                    servicer.UnfreezeAsset2,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.UnfreezeAssetContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'WithdrawBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.WithdrawBalance,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.WithdrawBalanceContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'WithdrawBalance2': grpc.unary_unary_rpc_method_handler(
                    servicer.WithdrawBalance2,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.WithdrawBalanceContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'WithdrawExpireUnfreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.WithdrawExpireUnfreeze,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.WithdrawExpireUnfreezeContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'DelegateResource': grpc.unary_unary_rpc_method_handler(
                    servicer.DelegateResource,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.DelegateResourceContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'UnDelegateResource': grpc.unary_unary_rpc_method_handler(
                    servicer.UnDelegateResource,
                    request_deserializer=core_dot_contract_dot_balance__contract__pb2.UnDelegateResourceContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'UpdateAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAsset,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.UpdateAssetContract.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'UpdateAsset2': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAsset2,
                    request_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.UpdateAssetContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'ProposalCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.ProposalCreate,
                    request_deserializer=core_dot_contract_dot_proposal__contract__pb2.ProposalCreateContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'ProposalApprove': grpc.unary_unary_rpc_method_handler(
                    servicer.ProposalApprove,
                    request_deserializer=core_dot_contract_dot_proposal__contract__pb2.ProposalApproveContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'ProposalDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.ProposalDelete,
                    request_deserializer=core_dot_contract_dot_proposal__contract__pb2.ProposalDeleteContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'BuyStorage': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyStorage,
                    request_deserializer=core_dot_contract_dot_storage__contract__pb2.BuyStorageContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'BuyStorageBytes': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyStorageBytes,
                    request_deserializer=core_dot_contract_dot_storage__contract__pb2.BuyStorageBytesContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'SellStorage': grpc.unary_unary_rpc_method_handler(
                    servicer.SellStorage,
                    request_deserializer=core_dot_contract_dot_storage__contract__pb2.SellStorageContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'ExchangeCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.ExchangeCreate,
                    request_deserializer=core_dot_contract_dot_exchange__contract__pb2.ExchangeCreateContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'ExchangeInject': grpc.unary_unary_rpc_method_handler(
                    servicer.ExchangeInject,
                    request_deserializer=core_dot_contract_dot_exchange__contract__pb2.ExchangeInjectContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'ExchangeWithdraw': grpc.unary_unary_rpc_method_handler(
                    servicer.ExchangeWithdraw,
                    request_deserializer=core_dot_contract_dot_exchange__contract__pb2.ExchangeWithdrawContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'ExchangeTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.ExchangeTransaction,
                    request_deserializer=core_dot_contract_dot_exchange__contract__pb2.ExchangeTransactionContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'MarketSellAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.MarketSellAsset,
                    request_deserializer=core_dot_contract_dot_market__contract__pb2.MarketSellAssetContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'MarketCancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.MarketCancelOrder,
                    request_deserializer=core_dot_contract_dot_market__contract__pb2.MarketCancelOrderContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'GetMarketOrderById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketOrderById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketOrder.SerializeToString,
            ),
            'GetMarketOrderByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketOrderByAccount,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketOrderList.SerializeToString,
            ),
            'GetMarketPriceByPair': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketPriceByPair,
                    request_deserializer=core_dot_Tron__pb2.MarketOrderPair.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketPriceList.SerializeToString,
            ),
            'GetMarketOrderListByPair': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketOrderListByPair,
                    request_deserializer=core_dot_Tron__pb2.MarketOrderPair.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketOrderList.SerializeToString,
            ),
            'GetMarketPairList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketPairList,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketOrderPairList.SerializeToString,
            ),
            'ListNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNodes,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.NodeList.SerializeToString,
            ),
            'GetAssetIssueByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetIssueByAccount,
                    request_deserializer=core_dot_Tron__pb2.Account.FromString,
                    response_serializer=api_dot_api__pb2.AssetIssueList.SerializeToString,
            ),
            'GetAccountNet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountNet,
                    request_deserializer=core_dot_Tron__pb2.Account.FromString,
                    response_serializer=api_dot_api__pb2.AccountNetMessage.SerializeToString,
            ),
            'GetAccountResource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountResource,
                    request_deserializer=core_dot_Tron__pb2.Account.FromString,
                    response_serializer=api_dot_api__pb2.AccountResourceMessage.SerializeToString,
            ),
            'GetAssetIssueByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetIssueByName,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.SerializeToString,
            ),
            'GetAssetIssueListByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetIssueListByName,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.AssetIssueList.SerializeToString,
            ),
            'GetAssetIssueById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetIssueById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.SerializeToString,
            ),
            'GetNowBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNowBlock,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Block.SerializeToString,
            ),
            'GetNowBlock2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNowBlock2,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.BlockExtention.SerializeToString,
            ),
            'GetBlockByNum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByNum,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Block.SerializeToString,
            ),
            'GetBlockByNum2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByNum2,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=api_dot_api__pb2.BlockExtention.SerializeToString,
            ),
            'GetTransactionCountByBlockNum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionCountByBlockNum,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'GetBlockById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Block.SerializeToString,
            ),
            'GetBlockByLimitNext': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByLimitNext,
                    request_deserializer=api_dot_api__pb2.BlockLimit.FromString,
                    response_serializer=api_dot_api__pb2.BlockList.SerializeToString,
            ),
            'GetBlockByLimitNext2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByLimitNext2,
                    request_deserializer=api_dot_api__pb2.BlockLimit.FromString,
                    response_serializer=api_dot_api__pb2.BlockListExtention.SerializeToString,
            ),
            'GetBlockByLatestNum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByLatestNum,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=api_dot_api__pb2.BlockList.SerializeToString,
            ),
            'GetBlockByLatestNum2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByLatestNum2,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=api_dot_api__pb2.BlockListExtention.SerializeToString,
            ),
            'GetTransactionById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'DeployContract': grpc.unary_unary_rpc_method_handler(
                    servicer.DeployContract,
                    request_deserializer=core_dot_contract_dot_smart__contract__pb2.CreateSmartContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'GetContract': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContract,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_contract_dot_smart__contract__pb2.SmartContract.SerializeToString,
            ),
            'GetContractInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContractInfo,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_contract_dot_smart__contract__pb2.SmartContractDataWrapper.SerializeToString,
            ),
            'TriggerContract': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerContract,
                    request_deserializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'TriggerConstantContract': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerConstantContract,
                    request_deserializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'EstimateEnergy': grpc.unary_unary_rpc_method_handler(
                    servicer.EstimateEnergy,
                    request_deserializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.FromString,
                    response_serializer=api_dot_api__pb2.EstimateEnergyMessage.SerializeToString,
            ),
            'ClearContractABI': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearContractABI,
                    request_deserializer=core_dot_contract_dot_smart__contract__pb2.ClearABIContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'ListWitnesses': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWitnesses,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.WitnessList.SerializeToString,
            ),
            'GetDelegatedResource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDelegatedResource,
                    request_deserializer=api_dot_api__pb2.DelegatedResourceMessage.FromString,
                    response_serializer=api_dot_api__pb2.DelegatedResourceList.SerializeToString,
            ),
            'GetDelegatedResourceV2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDelegatedResourceV2,
                    request_deserializer=api_dot_api__pb2.DelegatedResourceMessage.FromString,
                    response_serializer=api_dot_api__pb2.DelegatedResourceList.SerializeToString,
            ),
            'GetDelegatedResourceAccountIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDelegatedResourceAccountIndex,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.DelegatedResourceAccountIndex.SerializeToString,
            ),
            'GetDelegatedResourceAccountIndexV2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDelegatedResourceAccountIndexV2,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.DelegatedResourceAccountIndex.SerializeToString,
            ),
            'GetCanDelegatedMaxSize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCanDelegatedMaxSize,
                    request_deserializer=api_dot_api__pb2.CanDelegatedMaxSizeRequestMessage.FromString,
                    response_serializer=api_dot_api__pb2.CanDelegatedMaxSizeResponseMessage.SerializeToString,
            ),
            'GetAvailableUnfreezeCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableUnfreezeCount,
                    request_deserializer=api_dot_api__pb2.GetAvailableUnfreezeCountRequestMessage.FromString,
                    response_serializer=api_dot_api__pb2.GetAvailableUnfreezeCountResponseMessage.SerializeToString,
            ),
            'GetCanWithdrawUnfreezeAmount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCanWithdrawUnfreezeAmount,
                    request_deserializer=api_dot_api__pb2.CanWithdrawUnfreezeAmountRequestMessage.FromString,
                    response_serializer=api_dot_api__pb2.CanWithdrawUnfreezeAmountResponseMessage.SerializeToString,
            ),
            'ListProposals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProposals,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.ProposalList.SerializeToString,
            ),
            'GetPaginatedProposalList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaginatedProposalList,
                    request_deserializer=api_dot_api__pb2.PaginatedMessage.FromString,
                    response_serializer=api_dot_api__pb2.ProposalList.SerializeToString,
            ),
            'GetProposalById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProposalById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Proposal.SerializeToString,
            ),
            'ListExchanges': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExchanges,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.ExchangeList.SerializeToString,
            ),
            'GetPaginatedExchangeList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaginatedExchangeList,
                    request_deserializer=api_dot_api__pb2.PaginatedMessage.FromString,
                    response_serializer=api_dot_api__pb2.ExchangeList.SerializeToString,
            ),
            'GetExchangeById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExchangeById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Exchange.SerializeToString,
            ),
            'GetChainParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChainParameters,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.ChainParameters.SerializeToString,
            ),
            'GetAssetIssueList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetIssueList,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.AssetIssueList.SerializeToString,
            ),
            'GetPaginatedAssetIssueList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaginatedAssetIssueList,
                    request_deserializer=api_dot_api__pb2.PaginatedMessage.FromString,
                    response_serializer=api_dot_api__pb2.AssetIssueList.SerializeToString,
            ),
            'TotalTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.TotalTransaction,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'GetNextMaintenanceTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNextMaintenanceTime,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'GetTransactionSign': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionSign,
                    request_deserializer=core_dot_Tron__pb2.TransactionSign.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'GetTransactionSign2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionSign2,
                    request_deserializer=core_dot_Tron__pb2.TransactionSign.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'CreateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAddress,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
            ),
            'EasyTransferAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.EasyTransferAsset,
                    request_deserializer=api_dot_api__pb2.EasyTransferAssetMessage.FromString,
                    response_serializer=api_dot_api__pb2.EasyTransferResponse.SerializeToString,
            ),
            'EasyTransferAssetByPrivate': grpc.unary_unary_rpc_method_handler(
                    servicer.EasyTransferAssetByPrivate,
                    request_deserializer=api_dot_api__pb2.EasyTransferAssetByPrivateMessage.FromString,
                    response_serializer=api_dot_api__pb2.EasyTransferResponse.SerializeToString,
            ),
            'EasyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.EasyTransfer,
                    request_deserializer=api_dot_api__pb2.EasyTransferMessage.FromString,
                    response_serializer=api_dot_api__pb2.EasyTransferResponse.SerializeToString,
            ),
            'EasyTransferByPrivate': grpc.unary_unary_rpc_method_handler(
                    servicer.EasyTransferByPrivate,
                    request_deserializer=api_dot_api__pb2.EasyTransferByPrivateMessage.FromString,
                    response_serializer=api_dot_api__pb2.EasyTransferResponse.SerializeToString,
            ),
            'GenerateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAddress,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.AddressPrKeyPairMessage.SerializeToString,
            ),
            'GetTransactionInfoById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionInfoById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.TransactionInfo.SerializeToString,
            ),
            'AccountPermissionUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountPermissionUpdate,
                    request_deserializer=core_dot_contract_dot_account__contract__pb2.AccountPermissionUpdateContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'AddSign': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSign,
                    request_deserializer=core_dot_Tron__pb2.TransactionSign.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'GetTransactionSignWeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionSignWeight,
                    request_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                    response_serializer=api_dot_api__pb2.TransactionSignWeight.SerializeToString,
            ),
            'GetTransactionApprovedList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionApprovedList,
                    request_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                    response_serializer=api_dot_api__pb2.TransactionApprovedList.SerializeToString,
            ),
            'GetNodeInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeInfo,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.NodeInfo.SerializeToString,
            ),
            'GetRewardInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRewardInfo,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'GetBrokerageInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBrokerageInfo,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'UpdateBrokerage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBrokerage,
                    request_deserializer=core_dot_contract_dot_storage__contract__pb2.UpdateBrokerageContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'CreateShieldedTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateShieldedTransaction,
                    request_deserializer=api_dot_api__pb2.PrivateParameters.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'GetMerkleTreeVoucherInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMerkleTreeVoucherInfo,
                    request_deserializer=core_dot_contract_dot_shield__contract__pb2.OutputPointInfo.FromString,
                    response_serializer=core_dot_contract_dot_shield__contract__pb2.IncrementalMerkleVoucherInfo.SerializeToString,
            ),
            'ScanNoteByIvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanNoteByIvk,
                    request_deserializer=api_dot_api__pb2.IvkDecryptParameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotes.SerializeToString,
            ),
            'ScanAndMarkNoteByIvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanAndMarkNoteByIvk,
                    request_deserializer=api_dot_api__pb2.IvkDecryptAndMarkParameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotesMarked.SerializeToString,
            ),
            'ScanNoteByOvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanNoteByOvk,
                    request_deserializer=api_dot_api__pb2.OvkDecryptParameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotes.SerializeToString,
            ),
            'GetSpendingKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpendingKey,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
            ),
            'GetExpandedSpendingKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExpandedSpendingKey,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.ExpandedSpendingKeyMessage.SerializeToString,
            ),
            'GetAkFromAsk': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAkFromAsk,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
            ),
            'GetNkFromNsk': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNkFromNsk,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
            ),
            'GetIncomingViewingKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIncomingViewingKey,
                    request_deserializer=api_dot_api__pb2.ViewingKeyMessage.FromString,
                    response_serializer=api_dot_api__pb2.IncomingViewingKeyMessage.SerializeToString,
            ),
            'GetDiversifier': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDiversifier,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.DiversifierMessage.SerializeToString,
            ),
            'GetNewShieldedAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewShieldedAddress,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.ShieldedAddressInfo.SerializeToString,
            ),
            'GetZenPaymentAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetZenPaymentAddress,
                    request_deserializer=api_dot_api__pb2.IncomingViewingKeyDiversifierMessage.FromString,
                    response_serializer=api_dot_api__pb2.PaymentAddressMessage.SerializeToString,
            ),
            'GetRcm': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRcm,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
            ),
            'IsSpend': grpc.unary_unary_rpc_method_handler(
                    servicer.IsSpend,
                    request_deserializer=api_dot_api__pb2.NoteParameters.FromString,
                    response_serializer=api_dot_api__pb2.SpendResult.SerializeToString,
            ),
            'CreateShieldedTransactionWithoutSpendAuthSig': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateShieldedTransactionWithoutSpendAuthSig,
                    request_deserializer=api_dot_api__pb2.PrivateParametersWithoutAsk.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'GetShieldTransactionHash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShieldTransactionHash,
                    request_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                    response_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
            ),
            'CreateSpendAuthSig': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSpendAuthSig,
                    request_deserializer=api_dot_api__pb2.SpendAuthSigParameters.FromString,
                    response_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
            ),
            'CreateShieldNullifier': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateShieldNullifier,
                    request_deserializer=api_dot_api__pb2.NfParameters.FromString,
                    response_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
            ),
            'CreateShieldedContractParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateShieldedContractParameters,
                    request_deserializer=api_dot_api__pb2.PrivateShieldedTRC20Parameters.FromString,
                    response_serializer=api_dot_api__pb2.ShieldedTRC20Parameters.SerializeToString,
            ),
            'CreateShieldedContractParametersWithoutAsk': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateShieldedContractParametersWithoutAsk,
                    request_deserializer=api_dot_api__pb2.PrivateShieldedTRC20ParametersWithoutAsk.FromString,
                    response_serializer=api_dot_api__pb2.ShieldedTRC20Parameters.SerializeToString,
            ),
            'ScanShieldedTRC20NotesByIvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanShieldedTRC20NotesByIvk,
                    request_deserializer=api_dot_api__pb2.IvkDecryptTRC20Parameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotesTRC20.SerializeToString,
            ),
            'ScanShieldedTRC20NotesByOvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanShieldedTRC20NotesByOvk,
                    request_deserializer=api_dot_api__pb2.OvkDecryptTRC20Parameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotesTRC20.SerializeToString,
            ),
            'IsShieldedTRC20ContractNoteSpent': grpc.unary_unary_rpc_method_handler(
                    servicer.IsShieldedTRC20ContractNoteSpent,
                    request_deserializer=api_dot_api__pb2.NfTRC20Parameters.FromString,
                    response_serializer=api_dot_api__pb2.NullifierResult.SerializeToString,
            ),
            'GetTriggerInputForShieldedTRC20Contract': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTriggerInputForShieldedTRC20Contract,
                    request_deserializer=api_dot_api__pb2.ShieldedTRC20TriggerContractParameters.FromString,
                    response_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
            ),
            'CreateCommonTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCommonTransaction,
                    request_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'GetTransactionInfoByBlockNum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionInfoByBlockNum,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=api_dot_api__pb2.TransactionInfoList.SerializeToString,
            ),
            'GetBurnTrx': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBurnTrx,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'GetTransactionFromPending': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionFromPending,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'GetTransactionListFromPending': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionListFromPending,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.TransactionIdList.SerializeToString,
            ),
            'GetPendingSize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPendingSize,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'GetBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlock,
                    request_deserializer=api_dot_api__pb2.BlockReq.FromString,
                    response_serializer=api_dot_api__pb2.BlockExtention.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protocol.Wallet', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Wallet(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAccount',
            core_dot_Tron__pb2.Account.SerializeToString,
            core_dot_Tron__pb2.Account.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAccountById',
            core_dot_Tron__pb2.Account.SerializeToString,
            core_dot_Tron__pb2.Account.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAccountBalance',
            core_dot_contract_dot_balance__contract__pb2.AccountBalanceRequest.SerializeToString,
            core_dot_contract_dot_balance__contract__pb2.AccountBalanceResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockBalanceTrace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBlockBalanceTrace',
            core_dot_contract_dot_balance__contract__pb2.BlockBalanceTrace.BlockIdentifier.SerializeToString,
            core_dot_contract_dot_balance__contract__pb2.BlockBalanceTrace.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateTransaction',
            core_dot_contract_dot_balance__contract__pb2.TransferContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTransaction2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateTransaction2',
            core_dot_contract_dot_balance__contract__pb2.TransferContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BroadcastTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/BroadcastTransaction',
            core_dot_Tron__pb2.Transaction.SerializeToString,
            api_dot_api__pb2.Return.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UpdateAccount',
            core_dot_contract_dot_account__contract__pb2.AccountUpdateContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAccountId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/SetAccountId',
            core_dot_contract_dot_account__contract__pb2.SetAccountIdContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAccount2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UpdateAccount2',
            core_dot_contract_dot_account__contract__pb2.AccountUpdateContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoteWitnessAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/VoteWitnessAccount',
            core_dot_contract_dot_witness__contract__pb2.VoteWitnessContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UpdateSetting',
            core_dot_contract_dot_smart__contract__pb2.UpdateSettingContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateEnergyLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UpdateEnergyLimit',
            core_dot_contract_dot_smart__contract__pb2.UpdateEnergyLimitContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoteWitnessAccount2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/VoteWitnessAccount2',
            core_dot_contract_dot_witness__contract__pb2.VoteWitnessContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAssetIssue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateAssetIssue',
            core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAssetIssue2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateAssetIssue2',
            core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateWitness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UpdateWitness',
            core_dot_contract_dot_witness__contract__pb2.WitnessUpdateContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateWitness2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UpdateWitness2',
            core_dot_contract_dot_witness__contract__pb2.WitnessUpdateContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateAccount',
            core_dot_contract_dot_account__contract__pb2.AccountCreateContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAccount2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateAccount2',
            core_dot_contract_dot_account__contract__pb2.AccountCreateContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWitness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateWitness',
            core_dot_contract_dot_witness__contract__pb2.WitnessCreateContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWitness2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateWitness2',
            core_dot_contract_dot_witness__contract__pb2.WitnessCreateContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/TransferAsset',
            core_dot_contract_dot_asset__issue__contract__pb2.TransferAssetContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferAsset2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/TransferAsset2',
            core_dot_contract_dot_asset__issue__contract__pb2.TransferAssetContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ParticipateAssetIssue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ParticipateAssetIssue',
            core_dot_contract_dot_asset__issue__contract__pb2.ParticipateAssetIssueContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ParticipateAssetIssue2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ParticipateAssetIssue2',
            core_dot_contract_dot_asset__issue__contract__pb2.ParticipateAssetIssueContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FreezeBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/FreezeBalance',
            core_dot_contract_dot_balance__contract__pb2.FreezeBalanceContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FreezeBalance2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/FreezeBalance2',
            core_dot_contract_dot_balance__contract__pb2.FreezeBalanceContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FreezeBalanceV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/FreezeBalanceV2',
            core_dot_contract_dot_balance__contract__pb2.FreezeBalanceV2Contract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnfreezeBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UnfreezeBalance',
            core_dot_contract_dot_balance__contract__pb2.UnfreezeBalanceContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnfreezeBalance2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UnfreezeBalance2',
            core_dot_contract_dot_balance__contract__pb2.UnfreezeBalanceContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnfreezeBalanceV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UnfreezeBalanceV2',
            core_dot_contract_dot_balance__contract__pb2.UnfreezeBalanceV2Contract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnfreezeAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UnfreezeAsset',
            core_dot_contract_dot_asset__issue__contract__pb2.UnfreezeAssetContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnfreezeAsset2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UnfreezeAsset2',
            core_dot_contract_dot_asset__issue__contract__pb2.UnfreezeAssetContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WithdrawBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/WithdrawBalance',
            core_dot_contract_dot_balance__contract__pb2.WithdrawBalanceContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WithdrawBalance2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/WithdrawBalance2',
            core_dot_contract_dot_balance__contract__pb2.WithdrawBalanceContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WithdrawExpireUnfreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/WithdrawExpireUnfreeze',
            core_dot_contract_dot_balance__contract__pb2.WithdrawExpireUnfreezeContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DelegateResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/DelegateResource',
            core_dot_contract_dot_balance__contract__pb2.DelegateResourceContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnDelegateResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UnDelegateResource',
            core_dot_contract_dot_balance__contract__pb2.UnDelegateResourceContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UpdateAsset',
            core_dot_contract_dot_asset__issue__contract__pb2.UpdateAssetContract.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAsset2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UpdateAsset2',
            core_dot_contract_dot_asset__issue__contract__pb2.UpdateAssetContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProposalCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ProposalCreate',
            core_dot_contract_dot_proposal__contract__pb2.ProposalCreateContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProposalApprove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ProposalApprove',
            core_dot_contract_dot_proposal__contract__pb2.ProposalApproveContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProposalDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ProposalDelete',
            core_dot_contract_dot_proposal__contract__pb2.ProposalDeleteContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyStorage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/BuyStorage',
            core_dot_contract_dot_storage__contract__pb2.BuyStorageContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyStorageBytes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/BuyStorageBytes',
            core_dot_contract_dot_storage__contract__pb2.BuyStorageBytesContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellStorage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/SellStorage',
            core_dot_contract_dot_storage__contract__pb2.SellStorageContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExchangeCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ExchangeCreate',
            core_dot_contract_dot_exchange__contract__pb2.ExchangeCreateContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExchangeInject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ExchangeInject',
            core_dot_contract_dot_exchange__contract__pb2.ExchangeInjectContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExchangeWithdraw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ExchangeWithdraw',
            core_dot_contract_dot_exchange__contract__pb2.ExchangeWithdrawContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExchangeTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ExchangeTransaction',
            core_dot_contract_dot_exchange__contract__pb2.ExchangeTransactionContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarketSellAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/MarketSellAsset',
            core_dot_contract_dot_market__contract__pb2.MarketSellAssetContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarketCancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/MarketCancelOrder',
            core_dot_contract_dot_market__contract__pb2.MarketCancelOrderContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketOrderById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetMarketOrderById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.MarketOrder.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketOrderByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetMarketOrderByAccount',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.MarketOrderList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketPriceByPair(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetMarketPriceByPair',
            core_dot_Tron__pb2.MarketOrderPair.SerializeToString,
            core_dot_Tron__pb2.MarketPriceList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketOrderListByPair(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetMarketOrderListByPair',
            core_dot_Tron__pb2.MarketOrderPair.SerializeToString,
            core_dot_Tron__pb2.MarketOrderList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketPairList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetMarketPairList',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            core_dot_Tron__pb2.MarketOrderPairList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ListNodes',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.NodeList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetIssueByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAssetIssueByAccount',
            core_dot_Tron__pb2.Account.SerializeToString,
            api_dot_api__pb2.AssetIssueList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountNet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAccountNet',
            core_dot_Tron__pb2.Account.SerializeToString,
            api_dot_api__pb2.AccountNetMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAccountResource',
            core_dot_Tron__pb2.Account.SerializeToString,
            api_dot_api__pb2.AccountResourceMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetIssueByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAssetIssueByName',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetIssueListByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAssetIssueListByName',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.AssetIssueList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetIssueById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAssetIssueById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNowBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetNowBlock',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            core_dot_Tron__pb2.Block.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNowBlock2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetNowBlock2',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.BlockExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBlockByNum',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            core_dot_Tron__pb2.Block.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByNum2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBlockByNum2',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            api_dot_api__pb2.BlockExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionCountByBlockNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionCountByBlockNum',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBlockById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.Block.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByLimitNext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBlockByLimitNext',
            api_dot_api__pb2.BlockLimit.SerializeToString,
            api_dot_api__pb2.BlockList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByLimitNext2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBlockByLimitNext2',
            api_dot_api__pb2.BlockLimit.SerializeToString,
            api_dot_api__pb2.BlockListExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByLatestNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBlockByLatestNum',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            api_dot_api__pb2.BlockList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByLatestNum2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBlockByLatestNum2',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            api_dot_api__pb2.BlockListExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeployContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/DeployContract',
            core_dot_contract_dot_smart__contract__pb2.CreateSmartContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetContract',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_contract_dot_smart__contract__pb2.SmartContract.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContractInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetContractInfo',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_contract_dot_smart__contract__pb2.SmartContractDataWrapper.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/TriggerContract',
            core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerConstantContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/TriggerConstantContract',
            core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EstimateEnergy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/EstimateEnergy',
            core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
            api_dot_api__pb2.EstimateEnergyMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearContractABI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ClearContractABI',
            core_dot_contract_dot_smart__contract__pb2.ClearABIContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWitnesses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ListWitnesses',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.WitnessList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDelegatedResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetDelegatedResource',
            api_dot_api__pb2.DelegatedResourceMessage.SerializeToString,
            api_dot_api__pb2.DelegatedResourceList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDelegatedResourceV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetDelegatedResourceV2',
            api_dot_api__pb2.DelegatedResourceMessage.SerializeToString,
            api_dot_api__pb2.DelegatedResourceList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDelegatedResourceAccountIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetDelegatedResourceAccountIndex',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.DelegatedResourceAccountIndex.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDelegatedResourceAccountIndexV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetDelegatedResourceAccountIndexV2',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.DelegatedResourceAccountIndex.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCanDelegatedMaxSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetCanDelegatedMaxSize',
            api_dot_api__pb2.CanDelegatedMaxSizeRequestMessage.SerializeToString,
            api_dot_api__pb2.CanDelegatedMaxSizeResponseMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAvailableUnfreezeCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAvailableUnfreezeCount',
            api_dot_api__pb2.GetAvailableUnfreezeCountRequestMessage.SerializeToString,
            api_dot_api__pb2.GetAvailableUnfreezeCountResponseMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCanWithdrawUnfreezeAmount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetCanWithdrawUnfreezeAmount',
            api_dot_api__pb2.CanWithdrawUnfreezeAmountRequestMessage.SerializeToString,
            api_dot_api__pb2.CanWithdrawUnfreezeAmountResponseMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProposals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ListProposals',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.ProposalList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaginatedProposalList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetPaginatedProposalList',
            api_dot_api__pb2.PaginatedMessage.SerializeToString,
            api_dot_api__pb2.ProposalList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProposalById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetProposalById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.Proposal.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExchanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ListExchanges',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.ExchangeList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaginatedExchangeList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetPaginatedExchangeList',
            api_dot_api__pb2.PaginatedMessage.SerializeToString,
            api_dot_api__pb2.ExchangeList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExchangeById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetExchangeById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.Exchange.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChainParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetChainParameters',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            core_dot_Tron__pb2.ChainParameters.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetIssueList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAssetIssueList',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.AssetIssueList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaginatedAssetIssueList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetPaginatedAssetIssueList',
            api_dot_api__pb2.PaginatedMessage.SerializeToString,
            api_dot_api__pb2.AssetIssueList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TotalTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/TotalTransaction',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNextMaintenanceTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetNextMaintenanceTime',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionSign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionSign',
            core_dot_Tron__pb2.TransactionSign.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionSign2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionSign2',
            core_dot_Tron__pb2.TransactionSign.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateAddress',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.BytesMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EasyTransferAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/EasyTransferAsset',
            api_dot_api__pb2.EasyTransferAssetMessage.SerializeToString,
            api_dot_api__pb2.EasyTransferResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EasyTransferAssetByPrivate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/EasyTransferAssetByPrivate',
            api_dot_api__pb2.EasyTransferAssetByPrivateMessage.SerializeToString,
            api_dot_api__pb2.EasyTransferResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EasyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/EasyTransfer',
            api_dot_api__pb2.EasyTransferMessage.SerializeToString,
            api_dot_api__pb2.EasyTransferResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EasyTransferByPrivate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/EasyTransferByPrivate',
            api_dot_api__pb2.EasyTransferByPrivateMessage.SerializeToString,
            api_dot_api__pb2.EasyTransferResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GenerateAddress',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.AddressPrKeyPairMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionInfoById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionInfoById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.TransactionInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountPermissionUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/AccountPermissionUpdate',
            core_dot_contract_dot_account__contract__pb2.AccountPermissionUpdateContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddSign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/AddSign',
            core_dot_Tron__pb2.TransactionSign.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionSignWeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionSignWeight',
            core_dot_Tron__pb2.Transaction.SerializeToString,
            api_dot_api__pb2.TransactionSignWeight.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionApprovedList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionApprovedList',
            core_dot_Tron__pb2.Transaction.SerializeToString,
            api_dot_api__pb2.TransactionApprovedList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetNodeInfo',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            core_dot_Tron__pb2.NodeInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRewardInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetRewardInfo',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBrokerageInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBrokerageInfo',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBrokerage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/UpdateBrokerage',
            core_dot_contract_dot_storage__contract__pb2.UpdateBrokerageContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateShieldedTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateShieldedTransaction',
            api_dot_api__pb2.PrivateParameters.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMerkleTreeVoucherInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetMerkleTreeVoucherInfo',
            core_dot_contract_dot_shield__contract__pb2.OutputPointInfo.SerializeToString,
            core_dot_contract_dot_shield__contract__pb2.IncrementalMerkleVoucherInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanNoteByIvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ScanNoteByIvk',
            api_dot_api__pb2.IvkDecryptParameters.SerializeToString,
            api_dot_api__pb2.DecryptNotes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanAndMarkNoteByIvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ScanAndMarkNoteByIvk',
            api_dot_api__pb2.IvkDecryptAndMarkParameters.SerializeToString,
            api_dot_api__pb2.DecryptNotesMarked.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanNoteByOvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ScanNoteByOvk',
            api_dot_api__pb2.OvkDecryptParameters.SerializeToString,
            api_dot_api__pb2.DecryptNotes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpendingKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetSpendingKey',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.BytesMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExpandedSpendingKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetExpandedSpendingKey',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.ExpandedSpendingKeyMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAkFromAsk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetAkFromAsk',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.BytesMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNkFromNsk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetNkFromNsk',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.BytesMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIncomingViewingKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetIncomingViewingKey',
            api_dot_api__pb2.ViewingKeyMessage.SerializeToString,
            api_dot_api__pb2.IncomingViewingKeyMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDiversifier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetDiversifier',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.DiversifierMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNewShieldedAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetNewShieldedAddress',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.ShieldedAddressInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetZenPaymentAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetZenPaymentAddress',
            api_dot_api__pb2.IncomingViewingKeyDiversifierMessage.SerializeToString,
            api_dot_api__pb2.PaymentAddressMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRcm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetRcm',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.BytesMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsSpend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/IsSpend',
            api_dot_api__pb2.NoteParameters.SerializeToString,
            api_dot_api__pb2.SpendResult.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateShieldedTransactionWithoutSpendAuthSig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateShieldedTransactionWithoutSpendAuthSig',
            api_dot_api__pb2.PrivateParametersWithoutAsk.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShieldTransactionHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetShieldTransactionHash',
            core_dot_Tron__pb2.Transaction.SerializeToString,
            api_dot_api__pb2.BytesMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSpendAuthSig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateSpendAuthSig',
            api_dot_api__pb2.SpendAuthSigParameters.SerializeToString,
            api_dot_api__pb2.BytesMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateShieldNullifier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateShieldNullifier',
            api_dot_api__pb2.NfParameters.SerializeToString,
            api_dot_api__pb2.BytesMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateShieldedContractParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateShieldedContractParameters',
            api_dot_api__pb2.PrivateShieldedTRC20Parameters.SerializeToString,
            api_dot_api__pb2.ShieldedTRC20Parameters.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateShieldedContractParametersWithoutAsk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateShieldedContractParametersWithoutAsk',
            api_dot_api__pb2.PrivateShieldedTRC20ParametersWithoutAsk.SerializeToString,
            api_dot_api__pb2.ShieldedTRC20Parameters.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanShieldedTRC20NotesByIvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ScanShieldedTRC20NotesByIvk',
            api_dot_api__pb2.IvkDecryptTRC20Parameters.SerializeToString,
            api_dot_api__pb2.DecryptNotesTRC20.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanShieldedTRC20NotesByOvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/ScanShieldedTRC20NotesByOvk',
            api_dot_api__pb2.OvkDecryptTRC20Parameters.SerializeToString,
            api_dot_api__pb2.DecryptNotesTRC20.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsShieldedTRC20ContractNoteSpent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/IsShieldedTRC20ContractNoteSpent',
            api_dot_api__pb2.NfTRC20Parameters.SerializeToString,
            api_dot_api__pb2.NullifierResult.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTriggerInputForShieldedTRC20Contract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTriggerInputForShieldedTRC20Contract',
            api_dot_api__pb2.ShieldedTRC20TriggerContractParameters.SerializeToString,
            api_dot_api__pb2.BytesMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCommonTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/CreateCommonTransaction',
            core_dot_Tron__pb2.Transaction.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionInfoByBlockNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionInfoByBlockNum',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            api_dot_api__pb2.TransactionInfoList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBurnTrx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBurnTrx',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionFromPending(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionFromPending',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionListFromPending(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetTransactionListFromPending',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.TransactionIdList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPendingSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetPendingSize',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Wallet/GetBlock',
            api_dot_api__pb2.BlockReq.SerializeToString,
            api_dot_api__pb2.BlockExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class WalletSolidityStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAccount = channel.unary_unary(
                '/protocol.WalletSolidity/GetAccount',
                request_serializer=core_dot_Tron__pb2.Account.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Account.FromString,
                )
        self.GetAccountById = channel.unary_unary(
                '/protocol.WalletSolidity/GetAccountById',
                request_serializer=core_dot_Tron__pb2.Account.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Account.FromString,
                )
        self.ListWitnesses = channel.unary_unary(
                '/protocol.WalletSolidity/ListWitnesses',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.WitnessList.FromString,
                )
        self.GetAssetIssueList = channel.unary_unary(
                '/protocol.WalletSolidity/GetAssetIssueList',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.AssetIssueList.FromString,
                )
        self.GetPaginatedAssetIssueList = channel.unary_unary(
                '/protocol.WalletSolidity/GetPaginatedAssetIssueList',
                request_serializer=api_dot_api__pb2.PaginatedMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.AssetIssueList.FromString,
                )
        self.GetAssetIssueByName = channel.unary_unary(
                '/protocol.WalletSolidity/GetAssetIssueByName',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
                )
        self.GetAssetIssueListByName = channel.unary_unary(
                '/protocol.WalletSolidity/GetAssetIssueListByName',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.AssetIssueList.FromString,
                )
        self.GetAssetIssueById = channel.unary_unary(
                '/protocol.WalletSolidity/GetAssetIssueById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
                )
        self.GetNowBlock = channel.unary_unary(
                '/protocol.WalletSolidity/GetNowBlock',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Block.FromString,
                )
        self.GetNowBlock2 = channel.unary_unary(
                '/protocol.WalletSolidity/GetNowBlock2',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockExtention.FromString,
                )
        self.GetBlockByNum = channel.unary_unary(
                '/protocol.WalletSolidity/GetBlockByNum',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Block.FromString,
                )
        self.GetBlockByNum2 = channel.unary_unary(
                '/protocol.WalletSolidity/GetBlockByNum2',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockExtention.FromString,
                )
        self.GetTransactionCountByBlockNum = channel.unary_unary(
                '/protocol.WalletSolidity/GetTransactionCountByBlockNum',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.GetDelegatedResource = channel.unary_unary(
                '/protocol.WalletSolidity/GetDelegatedResource',
                request_serializer=api_dot_api__pb2.DelegatedResourceMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.DelegatedResourceList.FromString,
                )
        self.GetDelegatedResourceV2 = channel.unary_unary(
                '/protocol.WalletSolidity/GetDelegatedResourceV2',
                request_serializer=api_dot_api__pb2.DelegatedResourceMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.DelegatedResourceList.FromString,
                )
        self.GetDelegatedResourceAccountIndex = channel.unary_unary(
                '/protocol.WalletSolidity/GetDelegatedResourceAccountIndex',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.DelegatedResourceAccountIndex.FromString,
                )
        self.GetDelegatedResourceAccountIndexV2 = channel.unary_unary(
                '/protocol.WalletSolidity/GetDelegatedResourceAccountIndexV2',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.DelegatedResourceAccountIndex.FromString,
                )
        self.GetCanDelegatedMaxSize = channel.unary_unary(
                '/protocol.WalletSolidity/GetCanDelegatedMaxSize',
                request_serializer=api_dot_api__pb2.CanDelegatedMaxSizeRequestMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.CanDelegatedMaxSizeResponseMessage.FromString,
                )
        self.GetAvailableUnfreezeCount = channel.unary_unary(
                '/protocol.WalletSolidity/GetAvailableUnfreezeCount',
                request_serializer=api_dot_api__pb2.GetAvailableUnfreezeCountRequestMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.GetAvailableUnfreezeCountResponseMessage.FromString,
                )
        self.GetCanWithdrawUnfreezeAmount = channel.unary_unary(
                '/protocol.WalletSolidity/GetCanWithdrawUnfreezeAmount',
                request_serializer=api_dot_api__pb2.CanWithdrawUnfreezeAmountRequestMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.CanWithdrawUnfreezeAmountResponseMessage.FromString,
                )
        self.GetExchangeById = channel.unary_unary(
                '/protocol.WalletSolidity/GetExchangeById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Exchange.FromString,
                )
        self.ListExchanges = channel.unary_unary(
                '/protocol.WalletSolidity/ListExchanges',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.ExchangeList.FromString,
                )
        self.GetTransactionById = channel.unary_unary(
                '/protocol.WalletSolidity/GetTransactionById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Transaction.FromString,
                )
        self.GetTransactionInfoById = channel.unary_unary(
                '/protocol.WalletSolidity/GetTransactionInfoById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.TransactionInfo.FromString,
                )
        self.GenerateAddress = channel.unary_unary(
                '/protocol.WalletSolidity/GenerateAddress',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.AddressPrKeyPairMessage.FromString,
                )
        self.GetMerkleTreeVoucherInfo = channel.unary_unary(
                '/protocol.WalletSolidity/GetMerkleTreeVoucherInfo',
                request_serializer=core_dot_contract_dot_shield__contract__pb2.OutputPointInfo.SerializeToString,
                response_deserializer=core_dot_contract_dot_shield__contract__pb2.IncrementalMerkleVoucherInfo.FromString,
                )
        self.ScanNoteByIvk = channel.unary_unary(
                '/protocol.WalletSolidity/ScanNoteByIvk',
                request_serializer=api_dot_api__pb2.IvkDecryptParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotes.FromString,
                )
        self.ScanAndMarkNoteByIvk = channel.unary_unary(
                '/protocol.WalletSolidity/ScanAndMarkNoteByIvk',
                request_serializer=api_dot_api__pb2.IvkDecryptAndMarkParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotesMarked.FromString,
                )
        self.ScanNoteByOvk = channel.unary_unary(
                '/protocol.WalletSolidity/ScanNoteByOvk',
                request_serializer=api_dot_api__pb2.OvkDecryptParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotes.FromString,
                )
        self.IsSpend = channel.unary_unary(
                '/protocol.WalletSolidity/IsSpend',
                request_serializer=api_dot_api__pb2.NoteParameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.SpendResult.FromString,
                )
        self.ScanShieldedTRC20NotesByIvk = channel.unary_unary(
                '/protocol.WalletSolidity/ScanShieldedTRC20NotesByIvk',
                request_serializer=api_dot_api__pb2.IvkDecryptTRC20Parameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotesTRC20.FromString,
                )
        self.ScanShieldedTRC20NotesByOvk = channel.unary_unary(
                '/protocol.WalletSolidity/ScanShieldedTRC20NotesByOvk',
                request_serializer=api_dot_api__pb2.OvkDecryptTRC20Parameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.DecryptNotesTRC20.FromString,
                )
        self.IsShieldedTRC20ContractNoteSpent = channel.unary_unary(
                '/protocol.WalletSolidity/IsShieldedTRC20ContractNoteSpent',
                request_serializer=api_dot_api__pb2.NfTRC20Parameters.SerializeToString,
                response_deserializer=api_dot_api__pb2.NullifierResult.FromString,
                )
        self.GetRewardInfo = channel.unary_unary(
                '/protocol.WalletSolidity/GetRewardInfo',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.GetBrokerageInfo = channel.unary_unary(
                '/protocol.WalletSolidity/GetBrokerageInfo',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.TriggerConstantContract = channel.unary_unary(
                '/protocol.WalletSolidity/TriggerConstantContract',
                request_serializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionExtention.FromString,
                )
        self.EstimateEnergy = channel.unary_unary(
                '/protocol.WalletSolidity/EstimateEnergy',
                request_serializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
                response_deserializer=api_dot_api__pb2.EstimateEnergyMessage.FromString,
                )
        self.GetTransactionInfoByBlockNum = channel.unary_unary(
                '/protocol.WalletSolidity/GetTransactionInfoByBlockNum',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionInfoList.FromString,
                )
        self.GetMarketOrderById = channel.unary_unary(
                '/protocol.WalletSolidity/GetMarketOrderById',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketOrder.FromString,
                )
        self.GetMarketOrderByAccount = channel.unary_unary(
                '/protocol.WalletSolidity/GetMarketOrderByAccount',
                request_serializer=api_dot_api__pb2.BytesMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketOrderList.FromString,
                )
        self.GetMarketPriceByPair = channel.unary_unary(
                '/protocol.WalletSolidity/GetMarketPriceByPair',
                request_serializer=core_dot_Tron__pb2.MarketOrderPair.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketPriceList.FromString,
                )
        self.GetMarketOrderListByPair = channel.unary_unary(
                '/protocol.WalletSolidity/GetMarketOrderListByPair',
                request_serializer=core_dot_Tron__pb2.MarketOrderPair.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketOrderList.FromString,
                )
        self.GetMarketPairList = channel.unary_unary(
                '/protocol.WalletSolidity/GetMarketPairList',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MarketOrderPairList.FromString,
                )
        self.GetBurnTrx = channel.unary_unary(
                '/protocol.WalletSolidity/GetBurnTrx',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                )
        self.GetBlock = channel.unary_unary(
                '/protocol.WalletSolidity/GetBlock',
                request_serializer=api_dot_api__pb2.BlockReq.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockExtention.FromString,
                )


class WalletSolidityServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWitnesses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetIssueList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaginatedAssetIssueList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetIssueByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetIssueListByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetIssueById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNowBlock(self, request, context):
        """Please use GetNowBlock2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNowBlock2(self, request, context):
        """Use this function instead of GetNowBlock.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByNum(self, request, context):
        """Please use GetBlockByNum2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByNum2(self, request, context):
        """Use this function instead of GetBlockByNum.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionCountByBlockNum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDelegatedResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDelegatedResourceV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDelegatedResourceAccountIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDelegatedResourceAccountIndexV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCanDelegatedMaxSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAvailableUnfreezeCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCanWithdrawUnfreezeAmount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExchangeById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExchanges(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionInfoById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateAddress(self, request, context):
        """Warning: do not invoke this interface provided by others.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMerkleTreeVoucherInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanNoteByIvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanAndMarkNoteByIvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanNoteByOvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsSpend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanShieldedTRC20NotesByIvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanShieldedTRC20NotesByOvk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsShieldedTRC20ContractNoteSpent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRewardInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBrokerageInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerConstantContract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EstimateEnergy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionInfoByBlockNum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketOrderById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketOrderByAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketPriceByPair(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketOrderListByPair(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketPairList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBurnTrx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WalletSolidityServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccount,
                    request_deserializer=core_dot_Tron__pb2.Account.FromString,
                    response_serializer=core_dot_Tron__pb2.Account.SerializeToString,
            ),
            'GetAccountById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountById,
                    request_deserializer=core_dot_Tron__pb2.Account.FromString,
                    response_serializer=core_dot_Tron__pb2.Account.SerializeToString,
            ),
            'ListWitnesses': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWitnesses,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.WitnessList.SerializeToString,
            ),
            'GetAssetIssueList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetIssueList,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.AssetIssueList.SerializeToString,
            ),
            'GetPaginatedAssetIssueList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaginatedAssetIssueList,
                    request_deserializer=api_dot_api__pb2.PaginatedMessage.FromString,
                    response_serializer=api_dot_api__pb2.AssetIssueList.SerializeToString,
            ),
            'GetAssetIssueByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetIssueByName,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.SerializeToString,
            ),
            'GetAssetIssueListByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetIssueListByName,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.AssetIssueList.SerializeToString,
            ),
            'GetAssetIssueById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetIssueById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.SerializeToString,
            ),
            'GetNowBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNowBlock,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Block.SerializeToString,
            ),
            'GetNowBlock2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNowBlock2,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.BlockExtention.SerializeToString,
            ),
            'GetBlockByNum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByNum,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Block.SerializeToString,
            ),
            'GetBlockByNum2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByNum2,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=api_dot_api__pb2.BlockExtention.SerializeToString,
            ),
            'GetTransactionCountByBlockNum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionCountByBlockNum,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'GetDelegatedResource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDelegatedResource,
                    request_deserializer=api_dot_api__pb2.DelegatedResourceMessage.FromString,
                    response_serializer=api_dot_api__pb2.DelegatedResourceList.SerializeToString,
            ),
            'GetDelegatedResourceV2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDelegatedResourceV2,
                    request_deserializer=api_dot_api__pb2.DelegatedResourceMessage.FromString,
                    response_serializer=api_dot_api__pb2.DelegatedResourceList.SerializeToString,
            ),
            'GetDelegatedResourceAccountIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDelegatedResourceAccountIndex,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.DelegatedResourceAccountIndex.SerializeToString,
            ),
            'GetDelegatedResourceAccountIndexV2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDelegatedResourceAccountIndexV2,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.DelegatedResourceAccountIndex.SerializeToString,
            ),
            'GetCanDelegatedMaxSize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCanDelegatedMaxSize,
                    request_deserializer=api_dot_api__pb2.CanDelegatedMaxSizeRequestMessage.FromString,
                    response_serializer=api_dot_api__pb2.CanDelegatedMaxSizeResponseMessage.SerializeToString,
            ),
            'GetAvailableUnfreezeCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableUnfreezeCount,
                    request_deserializer=api_dot_api__pb2.GetAvailableUnfreezeCountRequestMessage.FromString,
                    response_serializer=api_dot_api__pb2.GetAvailableUnfreezeCountResponseMessage.SerializeToString,
            ),
            'GetCanWithdrawUnfreezeAmount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCanWithdrawUnfreezeAmount,
                    request_deserializer=api_dot_api__pb2.CanWithdrawUnfreezeAmountRequestMessage.FromString,
                    response_serializer=api_dot_api__pb2.CanWithdrawUnfreezeAmountResponseMessage.SerializeToString,
            ),
            'GetExchangeById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExchangeById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Exchange.SerializeToString,
            ),
            'ListExchanges': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExchanges,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.ExchangeList.SerializeToString,
            ),
            'GetTransactionById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Transaction.SerializeToString,
            ),
            'GetTransactionInfoById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionInfoById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.TransactionInfo.SerializeToString,
            ),
            'GenerateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAddress,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.AddressPrKeyPairMessage.SerializeToString,
            ),
            'GetMerkleTreeVoucherInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMerkleTreeVoucherInfo,
                    request_deserializer=core_dot_contract_dot_shield__contract__pb2.OutputPointInfo.FromString,
                    response_serializer=core_dot_contract_dot_shield__contract__pb2.IncrementalMerkleVoucherInfo.SerializeToString,
            ),
            'ScanNoteByIvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanNoteByIvk,
                    request_deserializer=api_dot_api__pb2.IvkDecryptParameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotes.SerializeToString,
            ),
            'ScanAndMarkNoteByIvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanAndMarkNoteByIvk,
                    request_deserializer=api_dot_api__pb2.IvkDecryptAndMarkParameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotesMarked.SerializeToString,
            ),
            'ScanNoteByOvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanNoteByOvk,
                    request_deserializer=api_dot_api__pb2.OvkDecryptParameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotes.SerializeToString,
            ),
            'IsSpend': grpc.unary_unary_rpc_method_handler(
                    servicer.IsSpend,
                    request_deserializer=api_dot_api__pb2.NoteParameters.FromString,
                    response_serializer=api_dot_api__pb2.SpendResult.SerializeToString,
            ),
            'ScanShieldedTRC20NotesByIvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanShieldedTRC20NotesByIvk,
                    request_deserializer=api_dot_api__pb2.IvkDecryptTRC20Parameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotesTRC20.SerializeToString,
            ),
            'ScanShieldedTRC20NotesByOvk': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanShieldedTRC20NotesByOvk,
                    request_deserializer=api_dot_api__pb2.OvkDecryptTRC20Parameters.FromString,
                    response_serializer=api_dot_api__pb2.DecryptNotesTRC20.SerializeToString,
            ),
            'IsShieldedTRC20ContractNoteSpent': grpc.unary_unary_rpc_method_handler(
                    servicer.IsShieldedTRC20ContractNoteSpent,
                    request_deserializer=api_dot_api__pb2.NfTRC20Parameters.FromString,
                    response_serializer=api_dot_api__pb2.NullifierResult.SerializeToString,
            ),
            'GetRewardInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRewardInfo,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'GetBrokerageInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBrokerageInfo,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'TriggerConstantContract': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerConstantContract,
                    request_deserializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.FromString,
                    response_serializer=api_dot_api__pb2.TransactionExtention.SerializeToString,
            ),
            'EstimateEnergy': grpc.unary_unary_rpc_method_handler(
                    servicer.EstimateEnergy,
                    request_deserializer=core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.FromString,
                    response_serializer=api_dot_api__pb2.EstimateEnergyMessage.SerializeToString,
            ),
            'GetTransactionInfoByBlockNum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionInfoByBlockNum,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=api_dot_api__pb2.TransactionInfoList.SerializeToString,
            ),
            'GetMarketOrderById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketOrderById,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketOrder.SerializeToString,
            ),
            'GetMarketOrderByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketOrderByAccount,
                    request_deserializer=api_dot_api__pb2.BytesMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketOrderList.SerializeToString,
            ),
            'GetMarketPriceByPair': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketPriceByPair,
                    request_deserializer=core_dot_Tron__pb2.MarketOrderPair.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketPriceList.SerializeToString,
            ),
            'GetMarketOrderListByPair': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketOrderListByPair,
                    request_deserializer=core_dot_Tron__pb2.MarketOrderPair.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketOrderList.SerializeToString,
            ),
            'GetMarketPairList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketPairList,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.MarketOrderPairList.SerializeToString,
            ),
            'GetBurnTrx': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBurnTrx,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
            ),
            'GetBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlock,
                    request_deserializer=api_dot_api__pb2.BlockReq.FromString,
                    response_serializer=api_dot_api__pb2.BlockExtention.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protocol.WalletSolidity', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WalletSolidity(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetAccount',
            core_dot_Tron__pb2.Account.SerializeToString,
            core_dot_Tron__pb2.Account.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetAccountById',
            core_dot_Tron__pb2.Account.SerializeToString,
            core_dot_Tron__pb2.Account.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWitnesses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/ListWitnesses',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.WitnessList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetIssueList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetAssetIssueList',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.AssetIssueList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaginatedAssetIssueList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetPaginatedAssetIssueList',
            api_dot_api__pb2.PaginatedMessage.SerializeToString,
            api_dot_api__pb2.AssetIssueList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetIssueByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetAssetIssueByName',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetIssueListByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetAssetIssueListByName',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.AssetIssueList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetIssueById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetAssetIssueById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_contract_dot_asset__issue__contract__pb2.AssetIssueContract.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNowBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetNowBlock',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            core_dot_Tron__pb2.Block.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNowBlock2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetNowBlock2',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.BlockExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetBlockByNum',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            core_dot_Tron__pb2.Block.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByNum2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetBlockByNum2',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            api_dot_api__pb2.BlockExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionCountByBlockNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetTransactionCountByBlockNum',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDelegatedResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetDelegatedResource',
            api_dot_api__pb2.DelegatedResourceMessage.SerializeToString,
            api_dot_api__pb2.DelegatedResourceList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDelegatedResourceV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetDelegatedResourceV2',
            api_dot_api__pb2.DelegatedResourceMessage.SerializeToString,
            api_dot_api__pb2.DelegatedResourceList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDelegatedResourceAccountIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetDelegatedResourceAccountIndex',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.DelegatedResourceAccountIndex.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDelegatedResourceAccountIndexV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetDelegatedResourceAccountIndexV2',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.DelegatedResourceAccountIndex.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCanDelegatedMaxSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetCanDelegatedMaxSize',
            api_dot_api__pb2.CanDelegatedMaxSizeRequestMessage.SerializeToString,
            api_dot_api__pb2.CanDelegatedMaxSizeResponseMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAvailableUnfreezeCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetAvailableUnfreezeCount',
            api_dot_api__pb2.GetAvailableUnfreezeCountRequestMessage.SerializeToString,
            api_dot_api__pb2.GetAvailableUnfreezeCountResponseMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCanWithdrawUnfreezeAmount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetCanWithdrawUnfreezeAmount',
            api_dot_api__pb2.CanWithdrawUnfreezeAmountRequestMessage.SerializeToString,
            api_dot_api__pb2.CanWithdrawUnfreezeAmountResponseMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExchangeById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetExchangeById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.Exchange.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExchanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/ListExchanges',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.ExchangeList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetTransactionById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.Transaction.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionInfoById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetTransactionInfoById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.TransactionInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GenerateAddress',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.AddressPrKeyPairMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMerkleTreeVoucherInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetMerkleTreeVoucherInfo',
            core_dot_contract_dot_shield__contract__pb2.OutputPointInfo.SerializeToString,
            core_dot_contract_dot_shield__contract__pb2.IncrementalMerkleVoucherInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanNoteByIvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/ScanNoteByIvk',
            api_dot_api__pb2.IvkDecryptParameters.SerializeToString,
            api_dot_api__pb2.DecryptNotes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanAndMarkNoteByIvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/ScanAndMarkNoteByIvk',
            api_dot_api__pb2.IvkDecryptAndMarkParameters.SerializeToString,
            api_dot_api__pb2.DecryptNotesMarked.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanNoteByOvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/ScanNoteByOvk',
            api_dot_api__pb2.OvkDecryptParameters.SerializeToString,
            api_dot_api__pb2.DecryptNotes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsSpend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/IsSpend',
            api_dot_api__pb2.NoteParameters.SerializeToString,
            api_dot_api__pb2.SpendResult.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanShieldedTRC20NotesByIvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/ScanShieldedTRC20NotesByIvk',
            api_dot_api__pb2.IvkDecryptTRC20Parameters.SerializeToString,
            api_dot_api__pb2.DecryptNotesTRC20.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanShieldedTRC20NotesByOvk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/ScanShieldedTRC20NotesByOvk',
            api_dot_api__pb2.OvkDecryptTRC20Parameters.SerializeToString,
            api_dot_api__pb2.DecryptNotesTRC20.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsShieldedTRC20ContractNoteSpent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/IsShieldedTRC20ContractNoteSpent',
            api_dot_api__pb2.NfTRC20Parameters.SerializeToString,
            api_dot_api__pb2.NullifierResult.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRewardInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetRewardInfo',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBrokerageInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetBrokerageInfo',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerConstantContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/TriggerConstantContract',
            core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
            api_dot_api__pb2.TransactionExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EstimateEnergy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/EstimateEnergy',
            core_dot_contract_dot_smart__contract__pb2.TriggerSmartContract.SerializeToString,
            api_dot_api__pb2.EstimateEnergyMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionInfoByBlockNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetTransactionInfoByBlockNum',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            api_dot_api__pb2.TransactionInfoList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketOrderById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetMarketOrderById',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.MarketOrder.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketOrderByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetMarketOrderByAccount',
            api_dot_api__pb2.BytesMessage.SerializeToString,
            core_dot_Tron__pb2.MarketOrderList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketPriceByPair(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetMarketPriceByPair',
            core_dot_Tron__pb2.MarketOrderPair.SerializeToString,
            core_dot_Tron__pb2.MarketPriceList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketOrderListByPair(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetMarketOrderListByPair',
            core_dot_Tron__pb2.MarketOrderPair.SerializeToString,
            core_dot_Tron__pb2.MarketOrderList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketPairList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetMarketPairList',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            core_dot_Tron__pb2.MarketOrderPairList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBurnTrx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetBurnTrx',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.NumberMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletSolidity/GetBlock',
            api_dot_api__pb2.BlockReq.SerializeToString,
            api_dot_api__pb2.BlockExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class WalletExtensionStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTransactionsFromThis = channel.unary_unary(
                '/protocol.WalletExtension/GetTransactionsFromThis',
                request_serializer=api_dot_api__pb2.AccountPaginated.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionList.FromString,
                )
        self.GetTransactionsFromThis2 = channel.unary_unary(
                '/protocol.WalletExtension/GetTransactionsFromThis2',
                request_serializer=api_dot_api__pb2.AccountPaginated.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionListExtention.FromString,
                )
        self.GetTransactionsToThis = channel.unary_unary(
                '/protocol.WalletExtension/GetTransactionsToThis',
                request_serializer=api_dot_api__pb2.AccountPaginated.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionList.FromString,
                )
        self.GetTransactionsToThis2 = channel.unary_unary(
                '/protocol.WalletExtension/GetTransactionsToThis2',
                request_serializer=api_dot_api__pb2.AccountPaginated.SerializeToString,
                response_deserializer=api_dot_api__pb2.TransactionListExtention.FromString,
                )


class WalletExtensionServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTransactionsFromThis(self, request, context):
        """Please use GetTransactionsFromThis2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionsFromThis2(self, request, context):
        """Use this function instead of GetTransactionsFromThis.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionsToThis(self, request, context):
        """Please use GetTransactionsToThis2 instead of this function.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionsToThis2(self, request, context):
        """Use this function instead of GetTransactionsToThis.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WalletExtensionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTransactionsFromThis': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionsFromThis,
                    request_deserializer=api_dot_api__pb2.AccountPaginated.FromString,
                    response_serializer=api_dot_api__pb2.TransactionList.SerializeToString,
            ),
            'GetTransactionsFromThis2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionsFromThis2,
                    request_deserializer=api_dot_api__pb2.AccountPaginated.FromString,
                    response_serializer=api_dot_api__pb2.TransactionListExtention.SerializeToString,
            ),
            'GetTransactionsToThis': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionsToThis,
                    request_deserializer=api_dot_api__pb2.AccountPaginated.FromString,
                    response_serializer=api_dot_api__pb2.TransactionList.SerializeToString,
            ),
            'GetTransactionsToThis2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionsToThis2,
                    request_deserializer=api_dot_api__pb2.AccountPaginated.FromString,
                    response_serializer=api_dot_api__pb2.TransactionListExtention.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protocol.WalletExtension', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WalletExtension(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTransactionsFromThis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletExtension/GetTransactionsFromThis',
            api_dot_api__pb2.AccountPaginated.SerializeToString,
            api_dot_api__pb2.TransactionList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionsFromThis2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletExtension/GetTransactionsFromThis2',
            api_dot_api__pb2.AccountPaginated.SerializeToString,
            api_dot_api__pb2.TransactionListExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionsToThis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletExtension/GetTransactionsToThis',
            api_dot_api__pb2.AccountPaginated.SerializeToString,
            api_dot_api__pb2.TransactionList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionsToThis2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.WalletExtension/GetTransactionsToThis2',
            api_dot_api__pb2.AccountPaginated.SerializeToString,
            api_dot_api__pb2.TransactionListExtention.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class DatabaseStub(object):
    """the api of tron's db
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getBlockReference = channel.unary_unary(
                '/protocol.Database/getBlockReference',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=api_dot_api__pb2.BlockReference.FromString,
                )
        self.GetDynamicProperties = channel.unary_unary(
                '/protocol.Database/GetDynamicProperties',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.DynamicProperties.FromString,
                )
        self.GetNowBlock = channel.unary_unary(
                '/protocol.Database/GetNowBlock',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Block.FromString,
                )
        self.GetBlockByNum = channel.unary_unary(
                '/protocol.Database/GetBlockByNum',
                request_serializer=api_dot_api__pb2.NumberMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.Block.FromString,
                )


class DatabaseServicer(object):
    """the api of tron's db
    """

    def getBlockReference(self, request, context):
        """for tapos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDynamicProperties(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNowBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByNum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatabaseServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getBlockReference': grpc.unary_unary_rpc_method_handler(
                    servicer.getBlockReference,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=api_dot_api__pb2.BlockReference.SerializeToString,
            ),
            'GetDynamicProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDynamicProperties,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.DynamicProperties.SerializeToString,
            ),
            'GetNowBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNowBlock,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Block.SerializeToString,
            ),
            'GetBlockByNum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByNum,
                    request_deserializer=api_dot_api__pb2.NumberMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.Block.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protocol.Database', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Database(object):
    """the api of tron's db
    """

    @staticmethod
    def getBlockReference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Database/getBlockReference',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            api_dot_api__pb2.BlockReference.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDynamicProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Database/GetDynamicProperties',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            core_dot_Tron__pb2.DynamicProperties.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNowBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Database/GetNowBlock',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            core_dot_Tron__pb2.Block.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Database/GetBlockByNum',
            api_dot_api__pb2.NumberMessage.SerializeToString,
            core_dot_Tron__pb2.Block.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class MonitorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStatsInfo = channel.unary_unary(
                '/protocol.Monitor/GetStatsInfo',
                request_serializer=api_dot_api__pb2.EmptyMessage.SerializeToString,
                response_deserializer=core_dot_Tron__pb2.MetricsInfo.FromString,
                )


class MonitorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStatsInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MonitorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStatsInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatsInfo,
                    request_deserializer=api_dot_api__pb2.EmptyMessage.FromString,
                    response_serializer=core_dot_Tron__pb2.MetricsInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protocol.Monitor', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Monitor(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStatsInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.Monitor/GetStatsInfo',
            api_dot_api__pb2.EmptyMessage.SerializeToString,
            core_dot_Tron__pb2.MetricsInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class NetworkStub(object):
    """the api of tron's network such as node list.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """


class NetworkServicer(object):
    """the api of tron's network such as node list.
    """


def add_NetworkServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protocol.Network', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Network(object):
    """the api of tron's network such as node list.
    """
